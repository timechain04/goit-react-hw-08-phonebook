{"version":3,"file":"static/js/287.971b26d4.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@chakra-ui/input/src/input-group.tsx","../node_modules/@chakra-ui/input/src/input-element.tsx","../node_modules/@chakra-ui/icon/src/create-icon.tsx","../node_modules/@chakra-ui/icons/src/View.tsx","../node_modules/@chakra-ui/icons/src/ViewOff.tsx","pages/RegisterPage/RegisterPage.jsx","../node_modules/@chakra-ui/form-control/src/form-label.tsx","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\nimport { cloneElement } from \"react\"\n\nconst [InputGroupStylesProvider, useInputGroupStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `,\n})\n\nexport { useInputGroupStyles }\n\nexport interface InputGroupProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Input\"> {}\n\nexport const InputGroup = forwardRef<InputGroupProps, \"div\">(\n  function InputGroup(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props)\n    const { children, className, ...rest } = omitThemingProps(props)\n\n    const _className = cx(\"chakra-input__group\", className)\n    const groupStyles: InputGroupProps = {}\n\n    const validChildren = getValidChildren(children)\n\n    const input: any = styles.field\n\n    validChildren.forEach((child: any) => {\n      if (!styles) return\n\n      if (input && child.type.id === \"InputLeftElement\") {\n        groupStyles.paddingStart = input.height ?? input.h\n      }\n\n      if (input && child.type.id === \"InputRightElement\") {\n        groupStyles.paddingEnd = input.height ?? input.h\n      }\n\n      if (child.type.id === \"InputRightAddon\") {\n        groupStyles.borderEndRadius = 0\n      }\n\n      if (child.type.id === \"InputLeftAddon\") {\n        groupStyles.borderStartRadius = 0\n      }\n    })\n\n    const clones = validChildren.map((child: any) => {\n      /**\n       * Make it possible to override the size and variant from `Input`\n       */\n\n      const theming = compact({\n        size: child.props?.size || props.size,\n        variant: child.props?.variant || props.variant,\n      })\n\n      return child.type.id !== \"Input\"\n        ? cloneElement(child, theming)\n        : cloneElement(child, Object.assign(theming, groupStyles, child.props))\n    })\n\n    return (\n      <chakra.div\n        className={_className}\n        ref={ref}\n        __css={{\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n          // Parts of inputs override z-index to ensure that they stack correctly on each other\n          // Create a new stacking context so that these overrides don't leak out and conflict with other z-indexes\n          isolation: \"isolate\",\n          ...styles.group,\n        }}\n        data-group\n        {...rest}\n      >\n        <InputGroupStylesProvider value={styles}>\n          {clones}\n        </InputGroupStylesProvider>\n      </chakra.div>\n    )\n  },\n)\n\nInputGroup.displayName = \"InputGroup\"\n","import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useInputGroupStyles } from \"./input-group\"\n\nexport interface InputElementProps extends HTMLChakraProps<\"div\"> {\n  placement?: \"left\" | \"right\"\n}\n\nconst StyledInputElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2,\n  },\n})\n\nconst InputElement = forwardRef<InputElementProps, \"div\">(function InputElement(\n  props,\n  ref,\n) {\n  const { placement = \"left\", ...rest } = props\n\n  const styles = useInputGroupStyles()\n  const input: any = styles.field\n\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\"\n\n  const elementStyles: SystemStyleObject = {\n    [attr]: \"0\",\n    width: input?.height ?? input?.h,\n    height: input?.height ?? input?.h,\n    fontSize: input?.fontSize,\n    ...styles.element,\n  }\n\n  return <StyledInputElement ref={ref} __css={elementStyles} {...rest} />\n})\n\n// This is used in `input-group.tsx`\nInputElement.id = \"InputElement\"\n\nInputElement.displayName = \"InputElement\"\n\nexport type InputLeftElementProps = Omit<InputElementProps, \"placement\">\n\nexport const InputLeftElement = forwardRef<InputLeftElementProps, \"div\">(\n  function InputLeftElement(props, ref) {\n    const { className, ...rest } = props\n    const _className = cx(\"chakra-input__left-element\", className)\n\n    return (\n      <InputElement\n        ref={ref}\n        placement=\"left\"\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\n// This is used in `input-group.tsx`\nInputLeftElement.id = \"InputLeftElement\"\n\nInputLeftElement.displayName = \"InputLeftElement\"\n\nexport type InputRightElementProps = Omit<InputElementProps, \"placement\">\n\nexport const InputRightElement = forwardRef<InputRightElementProps, \"div\">(\n  function InputRightElement(props, ref) {\n    const { className, ...rest } = props\n    const _className = cx(\"chakra-input__right-element\", className)\n\n    return (\n      <InputElement\n        ref={ref}\n        placement=\"right\"\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\n// This is used in `input-group.tsx`\nInputRightElement.id = \"InputRightElement\"\n\nInputRightElement.displayName = \"InputRightElement\"\n","import { forwardRef } from \"@chakra-ui/system\"\nimport { Children } from \"react\"\nimport { Icon, IconProps } from \"./icon\"\n\ninterface CreateIconOptions {\n  /**\n   * The icon `svg` viewBox\n   * @default \"0 0 24 24\"\n   */\n  viewBox?: string\n  /**\n   * The `svg` path or group element\n   * @type React.ReactElement | React.ReactElement[]\n   */\n  path?: React.ReactElement | React.ReactElement[]\n  /**\n   * If the `svg` has a single path, simply copy the path's `d` attribute\n   */\n  d?: string\n  /**\n   * The display name useful in the dev tools\n   */\n  displayName?: string\n  /**\n   * Default props automatically passed to the component; overwritable\n   */\n  defaultProps?: IconProps\n}\n\nexport function createIcon(options: CreateIconOptions) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {},\n  } = options\n  const path = Children.toArray(options.path)\n\n  const Comp = forwardRef<IconProps, \"svg\">((props, ref) => (\n    <Icon ref={ref} viewBox={viewBox} {...defaultProps} {...props}>\n      {path.length ? path : <path fill=\"currentColor\" d={pathDefinition} />}\n    </Icon>\n  ))\n\n  Comp.displayName = displayName\n\n  return Comp\n}\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const ViewIcon = createIcon({\n  displayName: \"ViewIcon\",\n  path: (\n    <g fill=\"currentColor\">\n      <path d=\"M23.432,10.524C20.787,7.614,16.4,4.538,12,4.6,7.6,4.537,3.213,7.615.568,10.524a2.211,2.211,0,0,0,0,2.948C3.182,16.351,7.507,19.4,11.839,19.4h.308c4.347,0,8.671-3.049,11.288-5.929A2.21,2.21,0,0,0,23.432,10.524ZM7.4,12A4.6,4.6,0,1,1,12,16.6,4.6,4.6,0,0,1,7.4,12Z\" />\n      <circle cx=\"12\" cy=\"12\" r=\"2\" />\n    </g>\n  ),\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const ViewOffIcon = createIcon({\n  displayName: \"ViewOffIcon\",\n  path: (\n    <g fill=\"currentColor\">\n      <path d=\"M23.2,10.549a20.954,20.954,0,0,0-4.3-3.6l4-3.995a1,1,0,1,0-1.414-1.414l-.018.018a.737.737,0,0,1-.173.291l-19.5,19.5c-.008.007-.018.009-.026.017a1,1,0,0,0,1.631,1.088l4.146-4.146a11.26,11.26,0,0,0,4.31.939h.3c4.256,0,8.489-2.984,11.051-5.8A2.171,2.171,0,0,0,23.2,10.549ZM16.313,13.27a4.581,4.581,0,0,1-3,3.028,4.3,4.3,0,0,1-3.1-.19.253.253,0,0,1-.068-.407l5.56-5.559a.252.252,0,0,1,.407.067A4.3,4.3,0,0,1,16.313,13.27Z\" />\n      <path d=\"M7.615,13.4a.244.244,0,0,0,.061-.24A4.315,4.315,0,0,1,7.5,12,4.5,4.5,0,0,1,12,7.5a4.276,4.276,0,0,1,1.16.173.244.244,0,0,0,.24-.062l1.941-1.942a.254.254,0,0,0-.1-.421A10.413,10.413,0,0,0,12,4.75C7.7,4.692,3.4,7.7.813,10.549a2.15,2.15,0,0,0-.007,2.9,21.209,21.209,0,0,0,3.438,3.03.256.256,0,0,0,.326-.029Z\" />\n    </g>\n  ),\n})\n","import { useState } from 'react';\nimport { Navigate, useNavigate, useLocation } from 'react-router-dom';\nimport { useUserSignupMutation } from 'redux/api/AuthApi';\nimport {Flex, Box, FormControl, FormLabel, Input, InputGroup, InputRightElement, Stack, Button,\n} from '@chakra-ui/react';\n import { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\n\nconst SignupView = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userSignup, { isSuccess }] = useUserSignupMutation();\n\n  const handleInputChange = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await userSignup({ name, email, password });\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  let navigate = useNavigate();\n  let location = useLocation();\n\n  const goBack = () => {\n    navigate(location?.state?.from || '/');\n  };\n  return (\n    <Box \n    marginTop={'30px'}\nborderRadius={'30px'}\n    marginLeft={'auto'}\n    marginRight={'auto'}\n    w='500px'\n    h='800px'\n    bgGradient='linear(to-r, green.500, gray.400, blue.300)'>\n    <Flex \n    >\n      {isSuccess && <Navigate to=\"/contacts\" replace={true} />}\n\n      <Stack mx={'auto'}\n      marginTop={'100px'} >\n  <Stack >\n  </Stack>\n  <Box\n    as=\"form\"\n    \n    onSubmit={handleSubmit}\n    p={20}\n  \n  >\n    <Stack spacing={4}>\n      <FormControl id=\"firstName\" isRequired>\n   <FormLabel color={'black'}>Name</FormLabel>\n   <Input\n     type=\"text\"\n     value={name}\n     name=\"name\"\n     onChange={handleInputChange}\n     color={'black'}\n     \n   />\n </FormControl>\n <FormControl id=\"email\" isRequired>\n   <FormLabel color={'black'}>Email</FormLabel>\n   <Input\n     pattern=\"^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$\"\n     onChange={handleInputChange}\n     type=\"email\"\n     value={email}\n     name=\"email\"\n     color={'black'}\n\n   />\n </FormControl>\n <FormControl id=\"password\" isRequired>\n   <FormLabel color={'black'}>Password</FormLabel>\n   <InputGroup>\n     <Input\n       onChange={handleInputChange}\n       type={showPassword ? 'text' : 'password'}\n       value={password}\n       minLength={7}\n       name=\"password\"\n       color={'black'}\n\n     />\n     <InputRightElement h={'full'}>\n       <Button\n         variant={'ghost'}\n         onClick={() =>\n           setShowPassword(showPassword => !showPassword)\n         }\n       >\n         {showPassword ? <ViewIcon /> : <ViewOffIcon />}\n       </Button>\n     </InputRightElement>\n   </InputGroup>\n       </FormControl>\n       <Stack spacing={10} pt={2}>\n         <Button\n           type=\"submit\"\n           disabled={name && email && password ? false : true}\n           loadingText=\"Submitting\"\n           marginTop={'20px'}\n           marginBottom={'30px'}\n           bg={'white'}\n           color={'black'}\n           _hover={{ \n             bg: '#38a6b4',\n           }}\n         >\n           Register\n         </Button>\n       </Stack>\n       <Stack\n         direction={{ base: 'column', sm: 'row' }}\n         align={'start'}\n         justify={'center'}\n       >\n         <Button type=\"button\" onClick={goBack}\n         bg={'white'}\n         color={'black'}\n         _hover={{ \n           color: 'white',\n           bg: 'black',\n         }}>\n           Back\n         </Button>\n       </Stack>\n       <Stack pt={6}>\n         \n       </Stack>\n     </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n    </Box>\n  );\n};\n\nexport default SignupView;\n","import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useFormControlContext, useFormControlStyles } from \"./form-control\"\n\nexport interface FormLabelProps\n  extends HTMLChakraProps<\"label\">,\n    ThemingProps<\"FormLabel\"> {\n  /**\n   * @type React.ReactElement\n   */\n  requiredIndicator?: React.ReactElement\n  /**\n   * @type React.ReactNode\n   */\n  optionalIndicator?: React.ReactNode\n}\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nexport const FormLabel = forwardRef<FormLabelProps, \"label\">(function FormLabel(\n  passedProps,\n  ref,\n) {\n  const styles = useStyleConfig(\"FormLabel\", passedProps)\n  const props = omitThemingProps(passedProps)\n\n  const {\n    className,\n    children,\n    requiredIndicator = <RequiredIndicator />,\n    optionalIndicator = null,\n    ...rest\n  } = props\n\n  const field = useFormControlContext()\n  const ownProps = field?.getLabelProps(rest, ref) ?? { ref, ...rest }\n\n  return (\n    <chakra.label\n      {...ownProps}\n      className={cx(\"chakra-form__label\", props.className)}\n      __css={{\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles,\n      }}\n    >\n      {children}\n      {field?.isRequired ? requiredIndicator : optionalIndicator}\n    </chakra.label>\n  )\n})\n\nFormLabel.displayName = \"FormLabel\"\n\nexport interface RequiredIndicatorProps extends HTMLChakraProps<\"span\"> {}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nexport const RequiredIndicator = forwardRef<RequiredIndicatorProps, \"span\">(\n  function RequiredIndicator(props, ref) {\n    const field = useFormControlContext()\n    const styles = useFormControlStyles()\n\n    if (!field?.isRequired) return null\n\n    const className = cx(\"chakra-form__required-indicator\", props.className)\n\n    return (\n      <chakra.span\n        {...field?.getRequiredIndicatorProps(props, ref)}\n        __css={styles.requiredIndicator}\n        className={className}\n      />\n    )\n  },\n)\n\nRequiredIndicator.displayName = \"RequiredIndicator\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","createContext","errorMessage","InputGroupStylesProvider","useInputGroupStyles","InputGroup","props","forwardRef","styles","children","className","useMultiStyleConfig","omitThemingProps","rest","_className","groupStyles","validChildren","cx","input","field","getValidChildren","forEach","child","type","id","paddingStart","_a","height","h","paddingEnd","_b","borderEndRadius","borderStartRadius","clones","map","theming","size","variant","compact","Object","assign","cloneElement","div","__css","name","chakra","display","position","isolation","group","displayName","alignItems","justifyContent","top","zIndex","InputElement","ref","attr","elementStyles","fontSize","element","baseStyle","InputLeftElement","StyledInputElement","viewBox","pathDefinition","d","defaultProps","path","toArray","Comp","createIcon","Children","Icon","options","length","fill","ViewIcon","jsx","cy","r","ViewOffIcon","useState","showPassword","setShowPassword","setName","email","setEmail","password","setPassword","useUserSignupMutation","userSignup","isSuccess","handleInputChange","currentTarget","handleSubmit","fn","event","preventDefault","self","this","args","arguments","apply","err","undefined","navigate","useNavigate","location","useLocation","marginTop","borderRadius","marginLeft","marginRight","w","bgGradient","to","replace","mx","as","onSubmit","p","spacing","isRequired","color","I","onChange","pattern","minLength","InputRightElement","onClick","pt","disabled","loadingText","marginBottom","bg","_hover","direction","base","sm","align","justify","state","from","useStyleConfig","requiredIndicator","RequiredIndicator","jsxs","optionalIndicator","useFormControlContext","passedProps","ownProps","getLabelProps","label","FormLabel","useFormControlStyles","span","getRequiredIndicatorProps","object","clone"],"sourceRoot":""}